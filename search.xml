<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 博客写文章及基本操作</title>
      <link href="//post/Hexo%20%E5%8D%9A%E5%AE%A2%E5%86%99%E6%96%87%E7%AB%A0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html"/>
      <url>//post/Hexo%20%E5%8D%9A%E5%AE%A2%E5%86%99%E6%96%87%E7%AB%A0%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html</url>
      
        <content type="html"><![CDATA[<h2 id="编写文章的工具"><a href="#编写文章的工具" class="headerlink" title="编写文章的工具"></a>编写文章的工具</h2><h3 id="1-Markdown"><a href="#1-Markdown" class="headerlink" title="1.Markdown"></a>1.Markdown</h3><p>写博客文章我们会使用<code>Markdown</code>来排版，它通过一些简单的标记语法让文本具有一定的格式。写作体验和<code>Word</code>这种机械式的排版工具比起来完全不是一个<code>level</code>的。</p><h3 id="2-Typora"><a href="#2-Typora" class="headerlink" title="2.Typora"></a>2.Typora</h3><p>接下来要介绍的主角是一个<code>Markdown</code>编辑器，它能让我们的写作体验达到顶峰。我个人是离不开这个编辑器了，它就是<a href="https://link.zhihu.com/?target=https://www.typora.io/">Typora</a></p><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><p>下面是我觉得比较好的两个点：</p><p>①实时预览：在<code>Typora</code>中我们输入标记语法就能实时看到排版效果，解决了传统<code>Markdown</code>编辑器左右分屏式看起来麻烦的烦恼。</p><p>②快捷键输入：很多标记语法我们都可以使用快捷键输入，免去了手动敲语法的烦恼。</p><blockquote><p><strong>当然还有很多强大的功能需要我们细品，这里就不一一赘述了，大家自行探索~</strong></p></blockquote><h3 id="常用快捷键和语法"><a href="#常用快捷键和语法" class="headerlink" title="常用快捷键和语法"></a>常用快捷键和语法</h3><p>标题：Ctrl+1、2、3…对应一、二、三…级标题（光标定位到需要设置为标题的行，按快捷键）</p><p><strong>加粗</strong>：Ctrl+B（选中要加粗的文本，按快捷键）</p><p><em>斜体</em>：Ctrl+I（选中要设置斜体的文本，按快捷键）</p><p>下划线：Ctrl+U（选中要加下划线的文本，按快捷键）</p><p>删除线：Alt+Shift+5（选中要加删除线的文本，按快捷键）</p><p><code>代码片段</code>：Ctrl+Shift+`（选中要设置为代码片段的文本，按快捷键）</p><p>代码块：Ctrl+Shift+K（任意位置按快捷键，选择编程语言然后在代码块中输入代码）</p><p>切换到下一行：Ctrl+Enter（任意位置按快捷键，在代码块中可以跳出代码块另起一行）</p><p><a href="https://link.zhihu.com/?target=https://www.baidu.com/">链接</a>：Ctrl+K（先复制链接，然后选中要加链接的文本，按快捷键。Ctrl+左键点击文本可跳转到对应链接）</p><p>取消格式：再次按相同的快捷键即可</p><p>有序列表：数字+点+空格</p><p>任务列表：加号或减号+空格</p><p>切换到列表下一行：Space+Enter</p><p>嵌套列表：按Tab键</p><p>退出列表：按 Shift+Tab</p><p>插入表格：Ctrl+T</p><p>引用：输入&gt;后面加空格，或者Ctrl+Shift+Q</p><h2 id="Hexo文章管理"><a href="#Hexo文章管理" class="headerlink" title="Hexo文章管理"></a>Hexo文章管理</h2><h3 id="1-创建一个md文件"><a href="#1-创建一个md文件" class="headerlink" title="1.创建一个md文件"></a>1.创建一个md文件</h3><p>md文件也就是<code>Markdown</code>文件，通过以下命令来创建：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">$ hexo new &lt;title>$ hexo new "我的第一篇文章"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-布局（layout）"><a href="#2-布局（layout）" class="headerlink" title="2.布局（layout）"></a>2.布局（layout）</h3><ul><li>创建md文件时，我们可以指定布局</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo new [layout] &lt;title&gt;$ hexo new page &quot;我的页面&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>布局有三种：<code>post</code>（文章）、<code>draft</code>（草稿）、<code>page</code>（页面）</li></ul><p>在新建文件时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件（可以理解为模板）来建立md文件：</p><p><img src="https://pic2.zhimg.com/80/v2-2683cfb7e862381166e609ef37210a99_1440w.png" alt="img"></p><ul><li>如果没有指定布局类型，则为默认布局<code>post</code>，可以在站点配置文件修改 <code>default_layout</code> 参数来修改默认布局。</li><li>当我们创建不同布局的md文件时，它们会存储在不同路径：</li></ul><p><img src="https://pic3.zhimg.com/80/v2-81c1aa7b55f1ae6767b3563127a22156_1440w.jpg" alt="img"></p><blockquote><p>对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件，页面布局顾名思义就是用来DIY我们博客页面的。</p></blockquote><h3 id="3-草稿（draft）"><a href="#3-草稿（draft）" class="headerlink" title="3.草稿（draft）"></a>3.草稿（draft）</h3><p><code>draft</code>这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹中，但不会显示在页面上，如果我们不想某一篇文章显示在页面上，那么就可以把它移动到<code>_drafts</code>文件夹中。</p><ul><li>我们可在启动服务器时加上 <code>--draft</code> 参数来查看草稿。</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo server --draft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>还可以在站点配置文件中把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</li><li>我们可以通过 <code>publish</code> 命令将草稿发布文章或者页面，它将会被移动到指定的文件夹。</li></ul><pre class="line-numbers language-none"><code class="language-none">$ hexo publish [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-Front-matter"><a href="#4-Front-matter" class="headerlink" title="4.Front-matter"></a>4.Front-matter</h3><p>当我们创建一个md文件后，打开后会看到一些内容，这些称为<code>Front-matter</code>，它是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hello World <span class="token comment"># 标题就是我们上面创建的时候指定的名字</span><span class="token key atrule">date</span><span class="token punctuation">:</span> 2013/7/13 20<span class="token punctuation">:</span><span class="token datetime number">46:25</span> <span class="token comment"># 文件创建的时间</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在<code>Typora</code>中我们在md文件的首行（必须是第一行）输入<code>---</code> ，然后按回车就可以插入<code>Front-matter</code>了。</p></blockquote><p>Front-matter预定义参数</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">layout  布局  默认为true，如果你不想你的文章被处理，可以设置为falsetitle  标题  标题会显示在最上方居中位置     date  建立日期    如果不指定则为默认值-文件创建日期，可以自定义。update  更新日期  如果不指定则为默认值-文件修改后重新生成静态文件的日期。comments  是否开启文章的评论功能 默认值为truetags  标签（不适用于页面page布局）categoreies  分类（不适用于页面page布局）permalink  覆盖文章网址keywords  仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="为文章添加分类与标签"><a href="#为文章添加分类与标签" class="headerlink" title="为文章添加分类与标签"></a>为文章添加分类与标签</h3><p>只有文章（post布局）支持分类和标签，需要在<code>Front-matter</code>中设置。分类有层级关系，标签没有。</p><p>举个例子：<br>1）下面文章它的标签是：Hexo、博客<br>2）分类是： 个人博客 &gt; Hexo博客<br>3）“Hexo博客” 是 “个人博客” 的子分类</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> 个人博客（第一层级）<span class="token punctuation">-</span> Hexo博客（第二层级）<span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token punctuation">-</span> Hexo<span class="token punctuation">-</span> 博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="为文章添加多个分类"><a href="#为文章添加多个分类" class="headerlink" title="为文章添加多个分类"></a>为文章添加多个分类</h3><p>1）下面文章属于三个分类：日常 &gt; 生活，日常 &gt; 随想，日记<br>2）其中生活、随想为日常的子分类，日常和日记为同级分类</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日常<span class="token punctuation">,</span> 生活<span class="token punctuation">]</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日常<span class="token punctuation">,</span> 随想<span class="token punctuation">]</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日记<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul><li><strong>清除缓存：</strong><code>hexo clean</code></li><li><strong>生成静态文件：</strong><code>hexo generate</code>可简写为 <code>hexo g</code></li><li><strong>启动服务器：</strong><code>hexo server</code>或者 <code>hexo s</code> 常用参数：<code>-p（--port）</code>重设端口</li><li><strong>部署：</strong><code>hexo deploy</code>可简写为<code>hexo d</code>，用于将网站部署到服务器上。（暂时用不到，目前都是在本地，后面我们将博客托管到<code>GitHub Pages</code>或<code>Gitee Pages</code>时才会用到此命令）<br>常用参数：<code>-g（--generate）</code>，<code>hexo d -g</code>部署前预先生成静态文件，等同于 <code>hexo g -d</code></li></ul><p><strong>一般发布文章或者修改博客后需要这些操作：</strong>清除缓存&gt;生成静态文件&gt;启动服务器，测试没问题后再部署。</p><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token comment">// 我们可以写成一条命令</span>$ hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>更多细节请查看：<a href="https://link.zhihu.com/?target=https://hexo.bootcss.com/docs/">Hexo官方文档</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aurora 主题自定义属性</title>
      <link href="//post/Aurora%20%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.html"/>
      <url>//post/Aurora%20%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.html</url>
      
        <content type="html"><![CDATA[<h2 id="Font-Meta"><a href="#Font-Meta" class="headerlink" title="Font-Meta"></a>Font-Meta</h2><p>Aurora 主题有它自己的自定义前置元属性，他们是用来配置特定的功能。</p><h3 id="Feature-属性"><a href="#Feature-属性" class="headerlink" title="Feature 属性"></a>Feature 属性</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml">feature: true</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这个<code>feature</code>属性将允许 Aurora 引擎找到这些文章，并将它们添加到推荐列表或置顶列表数据中。使用<a href="https://aurora.tridiamond.tech/zh/guide/theme.html#%E6%8E%A8%E8%8D%90%E5%B8%83%E5%B1%80%E6%A8%A1%E5%BC%8F">推荐布局模式</a>或<a href="https://aurora.tridiamond.tech/zh/guide/theme.html#%E7%BD%AE%E9%A1%B6%E5%B8%83%E5%B1%80%E6%A8%A1%E5%BC%8F">置顶布局模式</a>。</p><hr><h2 id="自定义容器"><a href="#自定义容器" class="headerlink" title="自定义容器"></a>自定义容器</h2><p>所有的自定义容器都使用这种格式:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::<span class="token url">[<span class="token content">type</span>] [<span class="token variable">title</span>]</span>文本内容:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><code>type</code> 是容器的类型</li><li><code>title</code> 是可选的，可以用来重命名容器的标题</li></ul><h3 id="Tip-容器"><a href="#Tip-容器" class="headerlink" title="Tip 容器"></a>Tip 容器</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::tipNormal Tips Container:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aurora.tridiamond.tech/images/screenshots/tip.png" alt="img"></p><p>如果你不想使用默认的标题<code>TIP</code>，你可以使用以下方法重命名你的容器标题:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::tip Custom headerCustom header<span class="token list punctuation">-</span> tips content<span class="token list punctuation">-</span> tips new line:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://aurora.tridiamond.tech/images/screenshots/tip-rename.png" alt="img"></p><h3 id="Warning-容器"><a href="#Warning-容器" class="headerlink" title="Warning 容器"></a>Warning 容器</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::warningWarning!!!:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aurora.tridiamond.tech/images/screenshots/warning.png" alt="img"></p><h3 id="Danger-容器"><a href="#Danger-容器" class="headerlink" title="Danger 容器"></a>Danger 容器</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::dangerDanger!!!:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://aurora.tridiamond.tech/images/screenshots/danger.png" alt="img"></p><h3 id="Details-容器"><a href="#Details-容器" class="headerlink" title="Details 容器"></a>Details 容器</h3><p>这是一种特殊类型的容器。如果你看过 GitHub 中的 <code>details</code> 容器，你可能会猜出它的功能是什么。</p><p>是的，您可以隐藏某些内容，并单击来展开它。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:::details Click to see moreFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.<span class="token list punctuation">-</span> details content<span class="token list punctuation">-</span> details new line<span class="token code"><span class="token punctuation">```</span><span class="token code-language">javascript</span><span class="token code-block language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">)</span></span><span class="token punctuation">```</span></span>:::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>关闭状态:</strong></p><p><img src="https://aurora.tridiamond.tech/images/screenshots/detail.png" alt="img"></p><p><strong>展开状态:</strong></p><p><img src="https://aurora.tridiamond.tech/images/screenshots/detail-opened.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 使用教程</title>
      <link href="//post/Markdown%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html"/>
      <url>//post/Markdown%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><hr><h3 id="Markdown-应用"><a href="#Markdown-应用" class="headerlink" title="Markdown 应用"></a>Markdown 应用</h3><p>Markdown 能被使用来撰写电子书，如：Gitbook。</p><p>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。</p><hr><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><p>本教程将使用 Typora 编辑器来讲解 Markdown 的语法，Typora 支持 MacOS 、Windows、Linux 平台，且包含多种主题，编辑后直接渲染出效果。</p><p>支持导出HTML、PDF、Word、图片等多种类型文件。</p><p>Typora 官网：<a href="https://typora.io/">https://typora.io/</a></p><hr><h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><p>Markdown 标题有两种格式。</p><h3 id="1、使用-和-标记一级和二级标题"><a href="#1、使用-和-标记一级和二级标题" class="headerlink" title="1、使用 = 和 - 标记一级和二级标题"></a>1、使用 = 和 - 标记一级和二级标题</h3><p>= 和 - 标记语法格式如下：</p><pre class="line-numbers language-none"><code class="language-none">我展示的是一级标题&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;我展示的是二级标题-----------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-号标记"><a href="#使用-号标记" class="headerlink" title="使用 # 号标记"></a>使用 # 号标记</h3><p>使用 <strong>#</strong> 号可表示 1-6 级标题，一级标题对应一个 <strong>#</strong> 号，二级标题对应两个 <strong>#</strong> 号，以此类推。</p><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Markdown-段落格式"><a href="#Markdown-段落格式" class="headerlink" title="Markdown 段落格式"></a>Markdown 段落格式</h2><p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用两个以上空格加上回车</strong>。</p><hr><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>Markdown 可以使用以下几种字体：</p><pre class="line-numbers language-none"><code class="language-none">*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class="line-numbers language-none"><code class="language-none">**** * ******- - -----------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong> 即可，实例如下：</p><pre class="line-numbers language-none"><code class="language-none">RAINERC.COMGOOGLE.COM~~BAIDU.COM~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线可以通过 HTML 的 u 标签来实现：</p><pre class="line-numbers language-none"><code class="language-none">&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>脚注是对文本的补充说明。</p><p>Markdown 脚注的格式如下:</p><pre class="line-numbers language-none"><code class="language-none">[^要注明的文本]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以下实例演示了脚注的用法：</p><pre class="line-numbers language-none"><code class="language-none">创建脚注格式类似这样 [^RAINERC]。[^RAINERC]: Rainerc -- 想做的太多，时间却太少！！！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*<em><strong>*)、加号(</strong>+</em>*)或是减号(<strong>-</strong>)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><pre class="line-numbers language-none"><code class="language-none">* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有序列表使用数字并加上 <strong>.</strong> 号来表示，如：</p><pre class="line-numbers language-none"><code class="language-none">1. 第一项2. 第二项3. 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><pre class="line-numbers language-none"><code class="language-none">1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</p><pre class="line-numbers language-none"><code class="language-none">&gt; 区块引用&gt; 教程&gt; 学无止境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>另外区块是可以嵌套的，一个 <strong>&gt;</strong> 符号是最外层，两个 <strong>&gt;</strong> 符号是第一层嵌套，以此类推：</p><pre class="line-numbers language-none"><code class="language-none">&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><p>区块中使用列表实例如下：</p><pre class="line-numbers language-none"><code class="language-none">&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><p>如果要在列表项目内放进区块，那么就需要在 <strong>&gt;</strong> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre class="line-numbers language-none"><code class="language-none">* 第一项    &gt; Rainerc    &gt; 想做的太多，时间却太少* 第二项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**），例如：</p><pre class="line-numbers language-none"><code class="language-none">&#96;printf()&#96; 函数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。</p><p>你也可以用 <strong>```</strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><pre class="line-numbers language-none"><code class="language-none">​&#96;&#96;&#96;javascript$(document).ready(function () &#123;    alert(&#39;RAINERC&#39;);&#125;);​&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">[链接名称](链接地址)或者&lt;链接地址&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">这是一个链接 [连接](https:&#x2F;&#x2F;www.rainerc.com)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接使用链接地址：</p><pre class="line-numbers language-none"><code class="language-none">&lt;https:&#x2F;&#x2F;www.rainerc.com&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h3><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><pre class="line-numbers language-none"><code class="language-none">这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Rainerc][rainerc]然后在文档的结尾为变量赋值（网址）  [1]: http:&#x2F;&#x2F;www.google.com&#x2F;  [rainerc]: http:&#x2F;&#x2F;www.rainerc.com&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><pre class="line-numbers language-none"><code class="language-none">![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><pre class="line-numbers language-none"><code class="language-none">![LOGO 图标](http:&#x2F;&#x2F;img.rainerc.com&#x2F;images&#x2F;logo.png)![LOGO 图标](http:&#x2F;&#x2F;img.rainerc.com&#x2F;images&#x2F;logo.png &quot;RAINERC&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然，你也可以像网址那样对图片网址使用变量:</p><pre class="line-numbers language-none"><code class="language-none">这个链接用 1 作为网址变量 [rainerc][1].然后在文档的结尾为变量赋值（网址）[1]: http:&#x2F;&#x2F;img.rainerc.com&#x2F;images&#x2F;logo.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 img 标签。</p><pre class="line-numbers language-none"><code class="language-none">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;img.rainerc.com&#x2F;images&#x2F;logo.png&quot; width&#x3D;&quot;50%&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><pre class="line-numbers language-none"><code class="language-none">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>对齐方式</p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><pre class="line-numbers language-none"><code class="language-none">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="//post/hello-world.html"/>
      <url>//post/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
